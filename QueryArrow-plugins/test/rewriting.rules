import qualified all from ICAT
import all from ICAT except META_ACCESS_OBJ
import all from ES_META
import all from NextID
import qualified all from EqDB
import qualified META_ACCESS_OBJ USER_OBJ META_OBJ DATA_OBJ eq lt le like like_regex from Neo4j
export DATA_NAME_2 META_1 META_2
export all from ICAT except DATA_NAME META_ATTR_NAME META_ATTR_VALUE META_ATTR_UNIT OBJT_METAMAP_OBJ META_ACCESS_OBJ META_OBJ
export qualified all from ICAT except META_ACCESS_OBJ
export META_ACCESS_OBJ eq lt le like like_regex from Neo4j
export qualified META_ACCESS_OBJ eq lt le like like_regex from Neo4j
export all from EqDB
export qualified all from EqDB
export all from ES_META
export qualified all from ES_META

// aux
predicate CLIENT_ID         object(key cid)
rewrite CLIENT_ID(u) ‚ü∂      USER_NAME(u, client_user_name) ‚äó USER_ZONE_NAME(u, client_zone)

predicate META              object(key oid, key mid, property a, property v, property u)
rewrite META(x, m, a, v, u) ‚ü∂ OBJT_METAMAP_OBJ(x, m) ‚äó META_ATTR_UNIT(m, u) ‚äó META_ATTR_NAME(m, a) ‚äó META_ATTR_VALUE(m, v)

predicate META_ATTR_ACCESS_OBJ object(key a, key oid, key uid, key acc)
rewrite META_ATTR_ACCESS_OBJ(oid, uid, acc) ‚ü∂  OBJT_ACCESS_OBJ(oid, uid, acc)

// new predicates
predicate DATA_NAME_2       object(key oid, property n)
rewrite DATA_NAME_2(x, y) ‚ü∂   DATA_NAME(x, y) ‚äó CLIENT_ID(u) ‚äó OBJT_ACCESS_OBJ(x, u, a) ‚äó ICAT.eq(a, 1200)
rewrite insert DATA_NAME_2(x, y)  ‚ü∂  insert DATA_NAME(x, y)
rewrite delete DATA_NAME_2(x, y)  ‚ü∂  delete DATA_NAME(x, y)

predicate META_1            object(key oid, key a, key v, key u)
rewrite META_1(x, a, v, u) ‚ü∂  META(x, m, a, v, u)
rewrite insert META_1(x, a, v, u) ‚ü∂  nextid(m) ‚äó insert
                            OBJT_METAMAP_OBJ(x, m) META_OBJ(m) META_ATTR_UNIT(m, u) META_ATTR_NAME(m, a) META_ATTR_VALUE(m, v)
rewrite delete META_1(x, a, v, u) ‚ü∂  OBJT_METAMAP_OBJ(x, m) ‚äó META_ATTR_UNIT(m, u) ‚äó META_ATTR_NAME(m, a) ‚äó META_ATTR_VALUE(m, v) ‚äó delete
                            OBJT_METAMAP_OBJ(x, m)

predicate META_2            object(key oid, key a, key v, key u)
rewrite META_2(x, a, v, u) ‚ü∂
                            CLIENT_ID(user) ‚äó (
                                ES_META(x, m, a, v, u)  ‚äï
                                META(x, m, a, v, u)
                            ) ‚äó Neo4j.META_ACCESS_OBJ(m, x, user, acc) ‚äó Neo4j.eq(acc, 1200)
rewrite insert META_2(x, a, v, u) ‚ü∂
                            transactional ‚äó nextid(m) ‚äó CLIENT_ID(user) ‚äó META_ATTR_ACCESS_OBJ(x, user, acc) ‚äó ICAT.eq(acc,1200) ‚äó
                            (¬¨ Neo4j.USER_OBJ(user) ‚äó insert Neo4j.USER_OBJ(user) ‚äó ùüé ‚äï ùüè) ‚äó
                            (¬¨ Neo4j.DATA_OBJ(x) ‚äó insert Neo4j.DATA_OBJ(x) ‚äó ùüé ‚äï ùüè) ‚äó
                            insert Neo4j.META_OBJ(m) Neo4j.META_ACCESS_OBJ(m, x, user, 1200) ‚äó
                            (
                                ¬¨ EqDB.eq(a, "searchable") ‚äó insert OBJT_METAMAP_OBJ(x, m) META_OBJ(m) META_ATTR_UNIT(m, u) META_ATTR_NAME(m, a) META_ATTR_VALUE(m, v) ‚äï
                                EqDB.eq(a, "searchable") ‚äó insert ES_META(x, m, a, v, u)
                            )

rewrite delete META_2(x, a, v, u) ‚ü∂  transactional ‚äó CLIENT_ID(user) ‚äó (
                                ES_META(x, m, a, v, u)  ‚äï
                                META(x, m, a, v, u)
                            ) ‚äó Neo4j.META_ACCESS_OBJ(m, x, user, acc) ‚äó Neo4j.eq(acc, 1200) ‚äó
                            (Neo4j.META_ACCESS_OBJ(m, x, user2, acc2) ‚äó delete Neo4j.META_ACCESS_OBJ(m, x, user2, acc2) ‚äó ùüé ‚äï ùüè) ‚äó
                            delete Neo4j.META_OBJ(m) ‚äó
                            (
                                ¬¨ EqDB.eq(a, "searchable") ‚äó delete OBJT_METAMAP_OBJ(x, m) ‚äï
                                EqDB.eq(a, "searchable") ‚äó delete ES_META(x, m, a, v, u)
                            )
